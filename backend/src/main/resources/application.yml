logging:
  file.name: ./log/backend.log
  level:
    root: INFO
    at:
      ac:
        tuwien:
          sepr:
            groupphase:
              backend: DEBUG
    org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: TRACE
  pattern:
    level: r=%X{r} ip=%X{ip} u=%X{u} %5p

spring:
  datasource:
    url: jdbc:h2:file:./database/db;AUTO_SERVER=TRUE;DB_CLOSE_DELAY=-1
    driver-class-name: org.h2.Driver
    username: admin
    password: password
  jpa:
    # Set this property to true if you want to see the executed queries
    show-sql: false
    hibernate:
      ddl-auto: create
    # Allows to fetch lazy properties outside the original transaction. Although this sounds helpful, the property
    # is disabled since it breaks the principle of least astonishment and leads to bad performance. To learn more,
    # follow this link: https://bit.ly/2LaX9ku
    open-in-view: false
  h2:
    console:
      enabled: true
      path: /h2-console
  nuki:
    api_token: ${NUKI_API_TOKEN}
  stripe:
    secret_key: ${STRIPE_API_KEY}
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_INTEGRATION_ID}
    password: ${MAIL_INTEGRATION_SECRET}
    properties:
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true
      mail.smtp.ssl.trust: smtp.gmail.com
  data:
    web:
      pageable:
        default-page-size: 50
        max-page-size: 100

security:
  auth:
    header: Authorization
    prefix: "Bearer "
    login-uri: /api/v1/authentication
  jwt:
    secret: ?E(H+MbQeThWmZq4t7w!z%C*F-J@NcRfUjXn2r5u8x/A?D(G+KbPdSgVkYp3s6v9
    type: JWT
    issuer: secure-backend
    audience: secure-app
    # 12 hours in milliseconds
    expiration-time: 43200000

management:
  server:
    port: 8081
  endpoints:
    web:
      exposure:
        include:
          - health
          - info
          - shutdown
          - metrics
          - env
  prometheus:
    metrics:
      export:
        enabled: true

application:
  booking:
    tax-id: ATU5838192534

---
spring:
  config:
    activate:
      on-cloud-platform: kubernetes
  lifecycle:
    timeout-per-shutdown-phase: 30s
server:
  shutdown: graceful
